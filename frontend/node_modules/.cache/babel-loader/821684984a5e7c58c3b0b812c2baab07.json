{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api from \"app/hooks/api\";\nimport history from \"@history\";\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\nimport { login } from \"app/services/AuthService\";\nimport { nanoid } from \"nanoid\";\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\nexport const GET_BIDDINGS = \"GET_BIDDINGS\";\nexport const ADD_BIDDING = \"ADD_BIDDING\";\nexport const GET_USERS = \"GET_USERS\";\nexport const GET_ORDERS = \"GET_ORDERS\";\nexport const ADD_ORDER = \"ADD_ORDER\";\nexport const UPDATE_ORDER = \"UPDATE_ORDER\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const getProducts = () => async dispatch => {\n  const response = await api.get(\"/products\");\n  const data = response.data.data;\n  dispatch({\n    type: GET_PRODUCTS,\n    payload: data\n  });\n};\nexport const getOrders = () => async dispatch => {\n  const response = await api.get(\"/orders\");\n  const data = response.data.data;\n  dispatch({\n    type: GET_ORDERS,\n    payload: data\n  });\n};\nexport const getBiddings = () => async dispatch => {\n  const response = await api.get(\"/biddings\");\n  const data = response.data.data;\n  dispatch({\n    type: GET_BIDDINGS,\n    payload: data\n  });\n};\nexport const getUsers = () => async dispatch => {\n  const response = await api.get(\"/users\");\n  const data = response.data.data;\n  dispatch({\n    type: GET_USERS,\n    payload: data\n  });\n};\nexport const addProduct = (product, user) => async dispatch => {\n  try {\n    const response = await api.post(\"/products\", product);\n    const data = response.data.data;\n    dispatch({\n      type: ADD_PRODUCT,\n      payload: data\n    });\n    NotificationManager.success(\"Product Added Successfully\");\n    history.push(\"/seller/my-products\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addBidding = bidding => async dispatch => {\n  try {\n    const response = await api.post(\"/biddings\", bidding);\n    const data = response.data.data;\n    dispatch({\n      type: ADD_BIDDING,\n      payload: data\n    });\n    NotificationManager.success(\"Product Added Successfully\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addOrder = order => async dispatch => {\n  try {\n    const response = await api.post(\"/orders\", order);\n    const data = response.data.data;\n    dispatch({\n      type: ADD_ORDER,\n      payload: data\n    });\n    NotificationManager.success(\"Product Added Successfully\");\n    history.push(\"/seller/my-products\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateOrder = (id, order) => async dispatch => {\n  try {\n    const response = await api.put(`/orders/${id}`, order); // const data = response.data.data;\n\n    dispatch({\n      type: UPDATE_ORDER,\n      payload: order\n    });\n    NotificationManager.success(\"Product Added Successfully\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteProduct = id => async dispatch => {\n  try {\n    const response = await api.delete(`/products/${id}`, order); // const data = response.data.data;\n\n    dispatch({\n      type: DELETE_PRODUCT,\n      payload: id\n    });\n    NotificationManager.success(\"Product Deleted Successfully\");\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/SMASH-PC/Desktop/furniturebidding/frontend/src/app/reducers/actions/FurnitureActions.js"],"names":["React","axios","Swal","api","history","NotificationManager","login","nanoid","ADD_PRODUCT","GET_PRODUCTS","GET_BIDDINGS","ADD_BIDDING","GET_USERS","GET_ORDERS","ADD_ORDER","UPDATE_ORDER","DELETE_PRODUCT","getProducts","dispatch","response","get","data","type","payload","getOrders","getBiddings","getUsers","addProduct","product","user","post","success","push","error","console","log","addBidding","bidding","addOrder","order","updateOrder","id","put","deleteProduct","delete"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport api from \"app/hooks/api\";\r\nimport history from \"@history\";\r\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\r\nimport { login } from \"app/services/AuthService\";\r\nimport { nanoid } from \"nanoid\";\r\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const GET_BIDDINGS = \"GET_BIDDINGS\";\r\nexport const ADD_BIDDING = \"ADD_BIDDING\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_ORDERS = \"GET_ORDERS\";\r\nexport const ADD_ORDER = \"ADD_ORDER\";\r\nexport const UPDATE_ORDER = \"UPDATE_ORDER\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n  const response = await api.get(\"/products\");\r\n  const data = response.data.data;\r\n  dispatch({\r\n    type: GET_PRODUCTS,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getOrders = () => async (dispatch) => {\r\n  const response = await api.get(\"/orders\");\r\n  const data = response.data.data;\r\n  dispatch({\r\n    type: GET_ORDERS,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getBiddings = () => async (dispatch) => {\r\n  const response = await api.get(\"/biddings\");\r\n  const data = response.data.data;\r\n  dispatch({\r\n    type: GET_BIDDINGS,\r\n    payload: data,\r\n  });\r\n};\r\nexport const getUsers = () => async (dispatch) => {\r\n  const response = await api.get(\"/users\");\r\n  const data = response.data.data;\r\n  dispatch({\r\n    type: GET_USERS,\r\n    payload: data,\r\n  });\r\n};\r\nexport const addProduct = (product, user) => async (dispatch) => {\r\n  try {\r\n    const response = await api.post(\"/products\", product);\r\n    const data = response.data.data;\r\n    dispatch({\r\n      type: ADD_PRODUCT,\r\n      payload: data,\r\n    });\r\n    NotificationManager.success(\"Product Added Successfully\");\r\n    history.push(\"/seller/my-products\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const addBidding = (bidding) => async (dispatch) => {\r\n  try {\r\n    const response = await api.post(\"/biddings\", bidding);\r\n    const data = response.data.data;\r\n    dispatch({\r\n      type: ADD_BIDDING,\r\n      payload: data,\r\n    });\r\n    NotificationManager.success(\"Product Added Successfully\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const addOrder = (order) => async (dispatch) => {\r\n  try {\r\n    const response = await api.post(\"/orders\", order);\r\n    const data = response.data.data;\r\n    dispatch({\r\n      type: ADD_ORDER,\r\n      payload: data,\r\n    });\r\n    NotificationManager.success(\"Product Added Successfully\");\r\n    history.push(\"/seller/my-products\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateOrder = (id, order) => async (dispatch) => {\r\n  try {\r\n    const response = await api.put(`/orders/${id}`, order);\r\n    // const data = response.data.data;\r\n    dispatch({\r\n      type: UPDATE_ORDER,\r\n      payload: order,\r\n    });\r\n    NotificationManager.success(\"Product Added Successfully\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  try {\r\n    const response = await api.delete(`/products/${id}`, order);\r\n    // const data = response.data.data;\r\n    dispatch({\r\n      type: DELETE_PRODUCT,\r\n      payload: id,\r\n    });\r\n    NotificationManager.success(\"Product Deleted Successfully\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}