{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\src\\\\app\\\\views\\\\seller\\\\components\\\\AddProduct.js\";\nimport React, { useState } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { nanoid } from \"nanoid\";\nimport { Formik, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport { classList } from \"@utils\";\nimport { Spinner, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"app/appContext\";\nimport CustomSelect from \"./CustomSelect\";\nimport DatePicker from \"react-datepicker\";\nimport { addProduct } from \"app/reducers/actions/FurnitureActions\";\nimport LaddaButton, { EXPAND_LEFT } from \"react-ladda/dist/LaddaButton\";\nconst basicFormSchema = yup.object().shape({\n  productName: yup.string().min(10, \"Please add at least 20 characters\").required(\"Product Name is required\"),\n  description: yup.string().min(20, \"Please add at least 20 characters\").required(\"Description is required\"),\n  productImages: yup.array().of(yup.mixed().test(\"fileSize\", \"File too large\", value => {\n    return value && value.size <= 5000000; // 1MB\n  })).required(\"At least one image is required\").min(1, \"Please select at least one image\"),\n  category: yup.string().required(\"Image is required\"),\n  endDate: yup.string().required(\"Time End is required\"),\n  startingBid: yup.number().required(\"Starting Bid is required\")\n});\n\nconst AddProduct = () => {\n  const {\n    dispatch,\n    user\n  } = useAuth();\n  const [previewImages, setPreviewImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const category = [\"Living Room\", \"Bed Room\", \"Kitchen\", \"Bathroom\"];\n  const initialState = {\n    productName: \"\",\n    description: \"\",\n    productImages: [],\n    category: \"\",\n    endDate: \"\",\n    startingBid: 0\n  };\n  const options = category.map(cat => {\n    return {\n      label: cat,\n      value: cat\n    };\n  });\n\n  const handleSubmit = (values, {\n    setSubmitting\n  }) => {\n    let formData = new FormData();\n    formData.append(\"id\", nanoid());\n    formData.append(\"productName\", values.productName);\n    formData.append(\"description\", values.description);\n    formData.append(\"category\", values.category);\n    formData.append(\"endDate\", values.endDate);\n    formData.append(\"startingBid\", values.startingBid);\n    formData.append(\"userId\", user.uid);\n    formData.append(\"isDone\", false);\n\n    for (const key of Object.keys(values.productImages)) {\n      formData.append(\"productImages\", values.productImages[key]);\n    }\n\n    setTimeout(() => {\n      addProduct(formData, user)(dispatch);\n      setSubmitting(false);\n    }, 2000);\n  };\n\n  console.log(nanoid());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: \"Products\",\n      path: \"/seller\"\n    }, {\n      name: \"Add Product\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Please out all fields\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialState,\n    validationSchema: basicFormSchema,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    isValidating\n  }) => {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classList({\n        \"form-group col-md-3\": true,\n        \"valid-field\": !errors.productImages && touched.productImages,\n        \"invalid-field\": errors.productImages && touched.productImages\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Product Images\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: \"productImages\",\n      name: \"productImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 31\n      }\n    }, ({\n      field\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between flex-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 35\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"upload-multiple-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-info\",\n      className: \"py-4\",\n      as: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Share-on-Cloud \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 43\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 43\n      }\n    }, \"Add Image\")))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"upload-multiple-file\",\n      className: \"d-none\",\n      multiple: true,\n      onChange: event => {\n        setPreviewImages(Array.from(event.target.files).map(file => URL.createObjectURL(file)));\n        setFieldValue(field.name, Array.from(event.target.files));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }, previewImages.map(imageUrl => /*#__PURE__*/React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"Preview\",\n      key: imageUrl,\n      style: {\n        width: \"50px\",\n        height: \"50px\",\n        marginLeft: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }))))), errors.productImages && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, errors.productImages))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classList({\n        \"form-group col-md-12\": true,\n        \"valid-field\": !errors.productName && touched.productName,\n        \"invalid-field\": errors.productName && touched.productName\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, \"Product Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"productName\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.productName,\n      placeholder: \"Enter product name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }), errors.productName && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 31\n      }\n    }, errors.productName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classList({\n        \"form-group col-md-12\": true,\n        \"valid-field\": !errors.description && touched.description,\n        \"invalid-field\": errors.description && touched.description\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      className: \"ul-form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, \"Product Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"\",\n      name: \"description\",\n      className: \"form-control\",\n      placeholder: \"Enter description\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }), errors.description && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 31\n      }\n    }, errors.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classList({\n        \"form-group col-md-12\": true,\n        \"valid-field\": !errors.category && touched.category,\n        \"invalid-field\": errors.category && touched.category\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"category\",\n      className: \"ul-form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, \"Product category\"), /*#__PURE__*/React.createElement(CustomSelect, {\n      name: \"category\",\n      options: options,\n      onChange: value => setFieldValue(\"category\", value.value),\n      value: values.category,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }), errors.category && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 31\n      }\n    }, errors.category)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classList({\n        \"form-group col-md-12\": true,\n        \"valid-field\": !errors.startingBid && touched.startingBid,\n        \"invalid-field\": errors.startingBid && touched.startingBid\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"startingBid\",\n      className: \"ul-form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }, \"Starting Bid\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"startingBid\",\n      className: \"form-control\",\n      placeholder: \"Enter starting bid\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.startingBid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }), errors.startingBid && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 31\n      }\n    }, errors.startingBid)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classList({\n        \"form-group col-md-12\": true,\n        \"valid-field\": !errors.endDate && touched.endDate,\n        \"invalid-field\": errors.endDate && touched.endDate\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"endDate\",\n      className: \"ul-form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    }, \"Bidding End Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"endDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 31\n      }\n    }, ({\n      field,\n      form\n    }) => /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"form-control\",\n      selected: field.value,\n      timeFormat: \"HH:mm\",\n      showTimeInput: true,\n      placeholderText: \"Choose date\",\n      onChange: date => form.setFieldValue(field.name, date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 35\n      }\n    }))), errors.endDate && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 31\n      }\n    }, errors.endDate)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-footer bg-transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mc-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(LaddaButton, {\n      className: \"btn btn-info\",\n      loading: isSubmitting,\n      progress: 0.5,\n      \"data-style\": EXPAND_LEFT,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 31\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-secondary m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 31\n      }\n    }, \"Cancel\"))))));\n  }))))));\n};\n\nexport default AddProduct;","map":{"version":3,"sources":["C:/Users/SMASH-PC/Desktop/furniturebidding/frontend/src/app/views/seller/components/AddProduct.js"],"names":["React","useState","Breadcrumb","nanoid","Formik","Field","yup","classList","Spinner","Button","Link","useAuth","CustomSelect","DatePicker","addProduct","LaddaButton","EXPAND_LEFT","basicFormSchema","object","shape","productName","string","min","required","description","productImages","array","of","mixed","test","value","size","category","endDate","startingBid","number","AddProduct","dispatch","user","previewImages","setPreviewImages","loading","setLoading","initialState","options","map","cat","label","handleSubmit","values","setSubmitting","formData","FormData","append","uid","key","Object","keys","setTimeout","console","log","name","path","errors","touched","handleChange","handleBlur","isSubmitting","setFieldValue","isValidating","field","event","Array","from","target","files","file","URL","createObjectURL","imageUrl","width","height","marginLeft","form","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,iBAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,OAAOC,WAAP,IAAsBC,WAAtB,QAAyC,8BAAzC;AACA,MAAMC,eAAe,GAAGX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AACzCC,EAAAA,WAAW,EAAEd,GAAG,CACbe,MADU,GAEVC,GAFU,CAEN,EAFM,EAEF,mCAFE,EAGVC,QAHU,CAGD,0BAHC,CAD4B;AAKzCC,EAAAA,WAAW,EAAElB,GAAG,CACbe,MADU,GAEVC,GAFU,CAEN,EAFM,EAEF,mCAFE,EAGVC,QAHU,CAGD,yBAHC,CAL4B;AASzCE,EAAAA,aAAa,EAAEnB,GAAG,CACfoB,KADY,GAEZC,EAFY,CAGXrB,GAAG,CAACsB,KAAJ,GAAYC,IAAZ,CAAiB,UAAjB,EAA6B,gBAA7B,EAAgDC,KAAD,IAAW;AACxD,WAAOA,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAc,OAA9B,CADwD,CACjB;AACxC,GAFD,CAHW,EAOZR,QAPY,CAOH,gCAPG,EAQZD,GARY,CAQR,CARQ,EAQL,kCARK,CAT0B;AAmBzCU,EAAAA,QAAQ,EAAE1B,GAAG,CAACe,MAAJ,GAAaE,QAAb,CAAsB,mBAAtB,CAnB+B;AAoBzCU,EAAAA,OAAO,EAAE3B,GAAG,CAACe,MAAJ,GAAaE,QAAb,CAAsB,sBAAtB,CApBgC;AAqBzCW,EAAAA,WAAW,EAAE5B,GAAG,CAAC6B,MAAJ,GAAaZ,QAAb,CAAsB,0BAAtB;AArB4B,CAAnB,CAAxB;;AAuBA,MAAMa,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqB3B,OAAO,EAAlC;AACA,QAAM,CAAC4B,aAAD,EAAgBC,gBAAhB,IAAoCvC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACwC,OAAD,EAAUC,UAAV,IAAwBzC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM+B,QAAQ,GAAG,CAAC,aAAD,EAAgB,UAAhB,EAA4B,SAA5B,EAAuC,UAAvC,CAAjB;AACA,QAAMW,YAAY,GAAG;AACnBvB,IAAAA,WAAW,EAAE,EADM;AAEnBI,IAAAA,WAAW,EAAE,EAFM;AAGnBC,IAAAA,aAAa,EAAE,EAHI;AAInBO,IAAAA,QAAQ,EAAE,EAJS;AAKnBC,IAAAA,OAAO,EAAE,EALU;AAMnBC,IAAAA,WAAW,EAAE;AANM,GAArB;AAQA,QAAMU,OAAO,GAAGZ,QAAQ,CAACa,GAAT,CAAcC,GAAD,IAAS;AACpC,WAAO;AACLC,MAAAA,KAAK,EAAED,GADF;AAELhB,MAAAA,KAAK,EAAEgB;AAFF,KAAP;AAID,GALe,CAAhB;;AAMA,QAAME,YAAY,GAAG,CAACC,MAAD,EAAS;AAAEC,IAAAA;AAAF,GAAT,KAA+B;AAClD,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAsBlD,MAAM,EAA5B;AACAgD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BJ,MAAM,CAAC7B,WAAtC;AACA+B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BJ,MAAM,CAACzB,WAAtC;AACA2B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BJ,MAAM,CAACjB,QAAnC;AACAmB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BJ,MAAM,CAAChB,OAAlC;AACAkB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BJ,MAAM,CAACf,WAAtC;AACAiB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0Bf,IAAI,CAACgB,GAA/B;AACAH,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,KAA1B;;AAEA,SAAK,MAAME,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYR,MAAM,CAACxB,aAAnB,CAAlB,EAAqD;AACnD0B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCJ,MAAM,CAACxB,aAAP,CAAqB8B,GAArB,CAAjC;AACD;;AACDG,IAAAA,UAAU,CAAC,MAAM;AACf5C,MAAAA,UAAU,CAACqC,QAAD,EAAWb,IAAX,CAAV,CAA2BD,QAA3B;AACAa,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAlBD;;AAmBAS,EAAAA,OAAO,CAACC,GAAR,CAAYzD,MAAM,EAAlB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,aAAa,EAAE,CACb;AAAE0D,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADa,EAEb;AAAED,MAAAA,IAAI,EAAE;AAAR,KAFa,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAElB,YADjB;AAEE,IAAA,gBAAgB,EAAE1B,eAFpB;AAGE,IAAA,QAAQ,EAAE+B,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAAC;AACAC,IAAAA,MADA;AAEAc,IAAAA,MAFA;AAGAC,IAAAA,OAHA;AAIAC,IAAAA,YAJA;AAKAC,IAAAA,UALA;AAMAlB,IAAAA,YANA;AAOAmB,IAAAA,YAPA;AAQAC,IAAAA,aARA;AASAC,IAAAA;AATA,GAAD,KAUK;AACJ,wBACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,QAAQ,EAAErB,YAFZ;AAGE,MAAA,UAAU,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAEzC,SAAS,CAAC;AACnB,+BAAuB,IADJ;AAEnB,uBACE,CAACwD,MAAM,CAACtC,aAAR,IAAyBuC,OAAO,CAACvC,aAHhB;AAInB,yBACEsC,MAAM,CAACtC,aAAP,IAAwBuC,OAAO,CAACvC;AALf,OAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,eAAV;AAA0B,MAAA,IAAI,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAE6C,MAAAA;AAAF,KAAD,kBACC;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEE;AAAO,MAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,cADV;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,EAAE,EAAC,MAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CALF,CADF,CAFF,eAcE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,sBAFL;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,QAAQ,EAAGC,KAAD,IAAW;AACnB/B,QAAAA,gBAAgB,CACdgC,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACG,MAAN,CAAaC,KAAxB,EAA+B9B,GAA/B,CACG+B,IAAD,IAAUC,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CADZ,CADc,CAAhB;AAKAR,QAAAA,aAAa,CACXE,KAAK,CAACT,IADK,EAEXW,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACG,MAAN,CAAaC,KAAxB,CAFW,CAAb;AAID,OAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eA+BE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpC,aAAa,CAACM,GAAd,CAAmBkC,QAAD,iBACjB;AACE,MAAA,GAAG,EAAEA,QADP;AAEE,MAAA,GAAG,EAAC,SAFN;AAGE,MAAA,GAAG,EAAEA,QAHP;AAIE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CA/BF,CAFJ,CADF,EAmDGnB,MAAM,CAACtC,aAAP,iBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGsC,MAAM,CAACtC,aADV,CApDJ,CAZF,CADF,eAuEE;AACE,MAAA,SAAS,EAAElB,SAAS,CAAC;AACnB,gCAAwB,IADL;AAEnB,uBACE,CAACwD,MAAM,CAAC3C,WAAR,IAAuB4C,OAAO,CAAC5C,WAHd;AAInB,yBACE2C,MAAM,CAAC3C,WAAP,IAAsB4C,OAAO,CAAC5C;AALb,OAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,MAAM,EAAE8C,UAJV;AAKE,MAAA,QAAQ,EAAED,YALZ;AAME,MAAA,KAAK,EAAEhB,MAAM,CAAC7B,WANhB;AAOE,MAAA,WAAW,EAAC,oBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAmBG2C,MAAM,CAAC3C,WAAP,iBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG2C,MAAM,CAAC3C,WADV,CApBJ,CAvEF,eAgGE;AACE,MAAA,SAAS,EAAEb,SAAS,CAAC;AACnB,gCAAwB,IADL;AAEnB,uBACE,CAACwD,MAAM,CAACvC,WAAR,IAAuBwC,OAAO,CAACxC,WAHd;AAInB,yBACEuC,MAAM,CAACvC,WAAP,IAAsBwC,OAAO,CAACxC;AALb,OAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,eAeE;AACE,MAAA,IAAI,EAAC,EADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAC,mBAJd;AAKE,MAAA,MAAM,EAAE0C,UALV;AAME,MAAA,QAAQ,EAAED,YANZ;AAOE,MAAA,KAAK,EAAEhB,MAAM,CAACzB,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAwBGuC,MAAM,CAACvC,WAAP,iBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuC,MAAM,CAACvC,WADV,CAzBJ,CAhGF,eA8HE;AACE,MAAA,SAAS,EAAEjB,SAAS,CAAC;AACnB,gCAAwB,IADL;AAEnB,uBACE,CAACwD,MAAM,CAAC/B,QAAR,IAAoBgC,OAAO,CAAChC,QAHX;AAInB,yBACE+B,MAAM,CAAC/B,QAAP,IAAmBgC,OAAO,CAAChC;AALV,OAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATF,eAeE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAEY,OAFX;AAGE,MAAA,QAAQ,EAAGd,KAAD,IACRsC,aAAa,CAAC,UAAD,EAAatC,KAAK,CAACA,KAAnB,CAJjB;AAME,MAAA,KAAK,EAAEmB,MAAM,CAACjB,QANhB;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAwBG+B,MAAM,CAAC/B,QAAP,iBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG+B,MAAM,CAAC/B,QADV,CAzBJ,CA9HF,eA4JE;AACE,MAAA,SAAS,EAAEzB,SAAS,CAAC;AACnB,gCAAwB,IADL;AAEnB,uBACE,CAACwD,MAAM,CAAC7B,WAAR,IAAuB8B,OAAO,CAAC9B,WAHd;AAInB,yBACE6B,MAAM,CAAC7B,WAAP,IAAsB8B,OAAO,CAAC9B;AALb,OAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAeE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAC,oBAJd;AAKE,MAAA,MAAM,EAAEgC,UALV;AAME,MAAA,QAAQ,EAAED,YANZ;AAOE,MAAA,KAAK,EAAEhB,MAAM,CAACf,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAwBG6B,MAAM,CAAC7B,WAAP,iBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6B,MAAM,CAAC7B,WADV,CAzBJ,CA5JF,eA0LE;AACE,MAAA,SAAS,EAAE3B,SAAS,CAAC;AACnB,gCAAwB,IADL;AAEnB,uBAAe,CAACwD,MAAM,CAAC9B,OAAR,IAAmB+B,OAAO,CAAC/B,OAFvB;AAGnB,yBACE8B,MAAM,CAAC9B,OAAP,IAAkB+B,OAAO,CAAC/B;AAJT,OAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,SAAS,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEqC,MAAAA,KAAF;AAASa,MAAAA;AAAT,KAAD,kBACC,oBAAC,UAAD;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,QAAQ,EAAEb,KAAK,CAACxC,KAFlB;AAGE,MAAA,UAAU,EAAC,OAHb;AAIE,MAAA,aAAa,MAJf;AAKE,MAAA,eAAe,EAAC,aALlB;AAME,MAAA,QAAQ,EAAGsD,IAAD,IACRD,IAAI,CAACf,aAAL,CAAmBE,KAAK,CAACT,IAAzB,EAA+BuB,IAA/B,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF,CAXF,EA2BGrB,MAAM,CAAC9B,OAAP,iBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG8B,MAAM,CAAC9B,OADV,CA5BJ,CA1LF,CADF,CALF,eAmOE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAEkC,YAFX;AAGE,MAAA,QAAQ,EAAE,GAHZ;AAIE,oBAAYnD,WAJd;AAKE,MAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,+BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADF,CADF,CADF,CAnOF,CADF;AA6PD,GA7QH,CADF,CADF,CAJF,CADF,CARF,CADF;AAqSD,CA5UD;;AA8UA,eAAeoB,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { classList } from \"@utils\";\r\nimport { Spinner, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"app/appContext\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { addProduct } from \"app/reducers/actions/FurnitureActions\";\r\nimport LaddaButton, { EXPAND_LEFT } from \"react-ladda/dist/LaddaButton\";\r\nconst basicFormSchema = yup.object().shape({\r\n  productName: yup\r\n    .string()\r\n    .min(10, \"Please add at least 20 characters\")\r\n    .required(\"Product Name is required\"),\r\n  description: yup\r\n    .string()\r\n    .min(20, \"Please add at least 20 characters\")\r\n    .required(\"Description is required\"),\r\n  productImages: yup\r\n    .array()\r\n    .of(\r\n      yup.mixed().test(\"fileSize\", \"File too large\", (value) => {\r\n        return value && value.size <= 5000000; // 1MB\r\n      })\r\n    )\r\n    .required(\"At least one image is required\")\r\n    .min(1, \"Please select at least one image\"),\r\n\r\n  category: yup.string().required(\"Image is required\"),\r\n  endDate: yup.string().required(\"Time End is required\"),\r\n  startingBid: yup.number().required(\"Starting Bid is required\"),\r\n});\r\nconst AddProduct = () => {\r\n  const { dispatch, user } = useAuth();\r\n  const [previewImages, setPreviewImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const category = [\"Living Room\", \"Bed Room\", \"Kitchen\", \"Bathroom\"];\r\n  const initialState = {\r\n    productName: \"\",\r\n    description: \"\",\r\n    productImages: [],\r\n    category: \"\",\r\n    endDate: \"\",\r\n    startingBid: 0,\r\n  };\r\n  const options = category.map((cat) => {\r\n    return {\r\n      label: cat,\r\n      value: cat,\r\n    };\r\n  });\r\n  const handleSubmit = (values, { setSubmitting }) => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", nanoid());\r\n    formData.append(\"productName\", values.productName);\r\n    formData.append(\"description\", values.description);\r\n    formData.append(\"category\", values.category);\r\n    formData.append(\"endDate\", values.endDate);\r\n    formData.append(\"startingBid\", values.startingBid);\r\n    formData.append(\"userId\", user.uid);\r\n    formData.append(\"isDone\", false);\r\n\r\n    for (const key of Object.keys(values.productImages)) {\r\n      formData.append(\"productImages\", values.productImages[key]);\r\n    }\r\n    setTimeout(() => {\r\n      addProduct(formData, user)(dispatch);\r\n      setSubmitting(false);\r\n    }, 2000);\r\n  };\r\n  console.log(nanoid());\r\n  return (\r\n    <div>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"Products\", path: \"/seller\" },\r\n          { name: \"Add Product\" },\r\n        ]}\r\n      ></Breadcrumb>\r\n\r\n      <div className=\"col-lg-12 mb-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header bg-transparent\">\r\n            <h3 className=\"card-title\">Please out all fields</h3>\r\n          </div>\r\n          <div>\r\n            <div className=\"card-body\">\r\n              <Formik\r\n                initialValues={initialState}\r\n                validationSchema={basicFormSchema}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  setFieldValue,\r\n                  isValidating,\r\n                }) => {\r\n                  return (\r\n                    <form\r\n                      className=\"needs-validation\"\r\n                      onSubmit={handleSubmit}\r\n                      noValidate\r\n                    >\r\n                      <div>\r\n                        <div>\r\n                          <div\r\n                            className={classList({\r\n                              \"form-group col-md-3\": true,\r\n                              \"valid-field\":\r\n                                !errors.productImages && touched.productImages,\r\n                              \"invalid-field\":\r\n                                errors.productImages && touched.productImages,\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"productImages\">\r\n                              Product Images\r\n                            </label>\r\n                            <div>\r\n                              <Field id=\"productImages\" name=\"productImages\">\r\n                                {({ field }) => (\r\n                                  <div className=\"d-flex justify-content-between flex-row align-items-center\">\r\n                                    {\" \"}\r\n                                    <label htmlFor=\"upload-multiple-file\">\r\n                                      <Button\r\n                                        variant=\"outline-info\"\r\n                                        className=\"py-4\"\r\n                                        as=\"span\"\r\n                                      >\r\n                                        <div className=\"flex flex-middle\">\r\n                                          <i className=\"i-Share-on-Cloud \"> </i>\r\n                                          <span>Add Image</span>\r\n                                        </div>\r\n                                      </Button>\r\n                                    </label>\r\n                                    <input\r\n                                      type=\"file\"\r\n                                      id=\"upload-multiple-file\"\r\n                                      className=\"d-none\"\r\n                                      multiple\r\n                                      onChange={(event) => {\r\n                                        setPreviewImages(\r\n                                          Array.from(event.target.files).map(\r\n                                            (file) => URL.createObjectURL(file)\r\n                                          )\r\n                                        );\r\n                                        setFieldValue(\r\n                                          field.name,\r\n                                          Array.from(event.target.files)\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <div className=\"d-flex flex-row justify-content-between\">\r\n                                      {previewImages.map((imageUrl) => (\r\n                                        <img\r\n                                          src={imageUrl}\r\n                                          alt=\"Preview\"\r\n                                          key={imageUrl}\r\n                                          style={{\r\n                                            width: \"50px\",\r\n                                            height: \"50px\",\r\n                                            marginLeft: \"5px\",\r\n                                          }}\r\n                                        />\r\n                                      ))}\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Field>\r\n                              {errors.productImages && (\r\n                                <div className=\"invalid-feedback\">\r\n                                  {errors.productImages}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"form-group col-md-12\": true,\r\n                              \"valid-field\":\r\n                                !errors.productName && touched.productName,\r\n                              \"invalid-field\":\r\n                                errors.productName && touched.productName,\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"productName\">Product Name</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"productName\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.productName}\r\n                              placeholder=\"Enter product name\"\r\n                            />\r\n                            {errors.productName && (\r\n                              <div className=\"invalid-feedback\">\r\n                                {errors.productName}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"form-group col-md-12\": true,\r\n                              \"valid-field\":\r\n                                !errors.description && touched.description,\r\n                              \"invalid-field\":\r\n                                errors.description && touched.description,\r\n                            })}\r\n                          >\r\n                            <label\r\n                              htmlFor=\"description\"\r\n                              className=\"ul-form__label\"\r\n                            >\r\n                              Product Description\r\n                            </label>\r\n                            <textarea\r\n                              type=\"\"\r\n                              name=\"description\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Enter description\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.description}\r\n                            />\r\n                            {errors.description && (\r\n                              <div className=\"invalid-feedback\">\r\n                                {errors.description}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"form-group col-md-12\": true,\r\n                              \"valid-field\":\r\n                                !errors.category && touched.category,\r\n                              \"invalid-field\":\r\n                                errors.category && touched.category,\r\n                            })}\r\n                          >\r\n                            <label\r\n                              htmlFor=\"category\"\r\n                              className=\"ul-form__label\"\r\n                            >\r\n                              Product category\r\n                            </label>\r\n                            <CustomSelect\r\n                              name=\"category\"\r\n                              options={options}\r\n                              onChange={(value) =>\r\n                                setFieldValue(\"category\", value.value)\r\n                              }\r\n                              value={values.category}\r\n                              required\r\n                            />\r\n                            {errors.category && (\r\n                              <div className=\"invalid-feedback\">\r\n                                {errors.category}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"form-group col-md-12\": true,\r\n                              \"valid-field\":\r\n                                !errors.startingBid && touched.startingBid,\r\n                              \"invalid-field\":\r\n                                errors.startingBid && touched.startingBid,\r\n                            })}\r\n                          >\r\n                            <label\r\n                              htmlFor=\"startingBid\"\r\n                              className=\"ul-form__label\"\r\n                            >\r\n                              Starting Bid\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              name=\"startingBid\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Enter starting bid\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.startingBid}\r\n                            />\r\n                            {errors.startingBid && (\r\n                              <div className=\"invalid-feedback\">\r\n                                {errors.startingBid}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div\r\n                            className={classList({\r\n                              \"form-group col-md-12\": true,\r\n                              \"valid-field\": !errors.endDate && touched.endDate,\r\n                              \"invalid-field\":\r\n                                errors.endDate && touched.endDate,\r\n                            })}\r\n                          >\r\n                            <label htmlFor=\"endDate\" className=\"ul-form__label\">\r\n                              Bidding End Date\r\n                            </label>\r\n                            <div>\r\n                              <Field name=\"endDate\">\r\n                                {({ field, form }) => (\r\n                                  <DatePicker\r\n                                    className=\"form-control\"\r\n                                    selected={field.value}\r\n                                    timeFormat=\"HH:mm\"\r\n                                    showTimeInput\r\n                                    placeholderText=\"Choose date\"\r\n                                    onChange={(date) =>\r\n                                      form.setFieldValue(field.name, date)\r\n                                    }\r\n                                  />\r\n                                )}\r\n                              </Field>\r\n                            </div>\r\n                            {errors.endDate && (\r\n                              <div className=\"invalid-feedback\">\r\n                                {errors.endDate}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-footer bg-transparent\">\r\n                        <div className=\"mc-footer\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-lg-12 text-right\">\r\n                              <LaddaButton\r\n                                className=\"btn btn-info\"\r\n                                loading={isSubmitting}\r\n                                progress={0.5}\r\n                                data-style={EXPAND_LEFT}\r\n                                type=\"submit\"\r\n                              >\r\n                                Submit\r\n                              </LaddaButton>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-outline-secondary m-1\"\r\n                              >\r\n                                Cancel\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}