{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n      floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\n\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n            validMiddleware = middleware.filter(Boolean);\n            _context.next = 4;\n            return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n\n          case 4:\n            rtl = _context.sent;\n\n            if (!(process.env.NODE_ENV !== \"production\")) {\n              _context.next = 10;\n              break;\n            }\n\n            if (platform == null) {\n              console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n            }\n\n            if (!(validMiddleware.filter(function (_ref) {\n              var name = _ref.name;\n              return name === 'autoPlacement' || name === 'flip';\n            }).length > 1)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n\n          case 9:\n            if (!reference || !floating) {\n              console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n            }\n\n          case 10:\n            _context.next = 12;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 12:\n            rects = _context.sent;\n            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n            statefulPlacement = placement;\n            middlewareData = {};\n            resetCount = 0;\n            i = 0;\n\n          case 18:\n            if (!(i < validMiddleware.length)) {\n              _context.next = 52;\n              break;\n            }\n\n            _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n            _context.next = 22;\n            return fn({\n              x: x,\n              y: y,\n              initialPlacement: placement,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData,\n              rects: rects,\n              platform: platform,\n              elements: {\n                reference: reference,\n                floating: floating\n              }\n            });\n\n          case 22:\n            _yield$fn = _context.sent;\n            nextX = _yield$fn.x;\n            nextY = _yield$fn.y;\n            data = _yield$fn.data;\n            reset = _yield$fn.reset;\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = _objectSpread({}, middlewareData, _defineProperty({}, name, _objectSpread({}, middlewareData[name], {}, data)));\n\n            if (process.env.NODE_ENV !== \"production\") {\n              if (resetCount > 50) {\n                console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n              }\n            }\n\n            if (!(reset && resetCount <= 50)) {\n              _context.next = 49;\n              break;\n            }\n\n            resetCount++;\n\n            if (!(typeof reset === 'object')) {\n              _context.next = 47;\n              break;\n            }\n\n            if (reset.placement) {\n              statefulPlacement = reset.placement;\n            }\n\n            if (!reset.rects) {\n              _context.next = 44;\n              break;\n            }\n\n            if (!(reset.rects === true)) {\n              _context.next = 42;\n              break;\n            }\n\n            _context.next = 39;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 39:\n            _context.t0 = _context.sent;\n            _context.next = 43;\n            break;\n\n          case 42:\n            _context.t0 = reset.rects;\n\n          case 43:\n            rects = _context.t0;\n\n          case 44:\n            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n            x = _computeCoordsFromPla2.x;\n            y = _computeCoordsFromPla2.y;\n\n          case 47:\n            i = -1;\n            return _context.abrupt(\"continue\", 49);\n\n          case 49:\n            i++;\n            _context.next = 18;\n            break;\n\n          case 52:\n            return _context.abrupt(\"return\", {\n              x: x,\n              y: y,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData\n            });\n\n          case 53:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return _objectSpread({}, rect, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\n\n\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\n\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(middlewareArguments, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _options8, _options8$boundary, boundary, _options8$rootBoundar, rootBoundary, _options8$elementCont, elementContext, _options8$altBoundary, altBoundary, _options8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (options === void 0) {\n              options = {};\n            }\n\n            x = middlewareArguments.x, y = middlewareArguments.y, platform = middlewareArguments.platform, rects = middlewareArguments.rects, elements = middlewareArguments.elements, strategy = middlewareArguments.strategy;\n            _options8 = options, _options8$boundary = _options8.boundary, boundary = _options8$boundary === void 0 ? 'clippingAncestors' : _options8$boundary, _options8$rootBoundar = _options8.rootBoundary, rootBoundary = _options8$rootBoundar === void 0 ? 'viewport' : _options8$rootBoundar, _options8$elementCont = _options8.elementContext, elementContext = _options8$elementCont === void 0 ? 'floating' : _options8$elementCont, _options8$altBoundary = _options8.altBoundary, altBoundary = _options8$altBoundary === void 0 ? false : _options8$altBoundary, _options8$padding = _options8.padding, padding = _options8$padding === void 0 ? 0 : _options8$padding;\n            paddingObject = getSideObjectFromPadding(padding);\n            altContext = elementContext === 'floating' ? 'reference' : 'floating';\n            element = elements[altBoundary ? altContext : elementContext];\n            _context10.t0 = rectToClientRect;\n            _context10.t1 = platform;\n            _context10.next = 10;\n            return platform.isElement == null ? void 0 : platform.isElement(element);\n\n          case 10:\n            _context10.t2 = _await$platform$isEle = _context10.sent;\n\n            if (!(_context10.t2 != null)) {\n              _context10.next = 15;\n              break;\n            }\n\n            _context10.t3 = _await$platform$isEle;\n            _context10.next = 16;\n            break;\n\n          case 15:\n            _context10.t3 = true;\n\n          case 16:\n            if (!_context10.t3) {\n              _context10.next = 20;\n              break;\n            }\n\n            _context10.t4 = element;\n            _context10.next = 26;\n            break;\n\n          case 20:\n            _context10.t5 = element.contextElement;\n\n            if (_context10.t5) {\n              _context10.next = 25;\n              break;\n            }\n\n            _context10.next = 24;\n            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n\n          case 24:\n            _context10.t5 = _context10.sent;\n\n          case 25:\n            _context10.t4 = _context10.t5;\n\n          case 26:\n            _context10.t6 = _context10.t4;\n            _context10.t7 = boundary;\n            _context10.t8 = rootBoundary;\n            _context10.t9 = strategy;\n            _context10.t10 = {\n              element: _context10.t6,\n              boundary: _context10.t7,\n              rootBoundary: _context10.t8,\n              strategy: _context10.t9\n            };\n            _context10.next = 33;\n            return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n\n          case 33:\n            _context10.t11 = _context10.sent;\n            clippingClientRect = (0, _context10.t0)(_context10.t11);\n            rect = elementContext === 'floating' ? _objectSpread({}, rects.floating, {\n              x: x,\n              y: y\n            }) : rects.reference;\n            _context10.next = 38;\n            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n\n          case 38:\n            offsetParent = _context10.sent;\n            _context10.next = 41;\n            return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n\n          case 41:\n            if (!_context10.sent) {\n              _context10.next = 50;\n              break;\n            }\n\n            _context10.next = 44;\n            return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n\n          case 44:\n            _context10.t13 = _context10.sent;\n\n            if (_context10.t13) {\n              _context10.next = 47;\n              break;\n            }\n\n            _context10.t13 = {\n              x: 1,\n              y: 1\n            };\n\n          case 47:\n            _context10.t12 = _context10.t13;\n            _context10.next = 51;\n            break;\n\n          case 50:\n            _context10.t12 = {\n              x: 1,\n              y: 1\n            };\n\n          case 51:\n            offsetScale = _context10.t12;\n            _context10.t14 = rectToClientRect;\n\n            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n              _context10.next = 59;\n              break;\n            }\n\n            _context10.next = 56;\n            return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n              rect: rect,\n              offsetParent: offsetParent,\n              strategy: strategy\n            });\n\n          case 56:\n            _context10.t15 = _context10.sent;\n            _context10.next = 60;\n            break;\n\n          case 59:\n            _context10.t15 = rect;\n\n          case 60:\n            _context10.t16 = _context10.t15;\n            elementClientRect = (0, _context10.t14)(_context10.t16);\n            if (process.env.NODE_ENV !== \"production\") ;\n            return _context10.abrupt(\"return\", {\n              top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n              bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n              left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n              right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n            });\n\n          case 64:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\n\nvar min = Math.min;\nvar max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\n\n\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _data, _ref4;\n\n        var _ref3, element, _ref3$padding, padding, x, y, placement, rects, platform, paddingObject, coords, axis, length, arrowDimensions, minProp, maxProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, min, max, center, offset, shouldAddOffset, alignmentOffset;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Since `element` is required, we don't Partial<> the type.\n                _ref3 = options || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform;\n\n                if (!(element == null)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                if (process.env.NODE_ENV !== \"production\") {\n                  console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n                }\n\n                return _context2.abrupt(\"return\", {});\n\n              case 5:\n                paddingObject = getSideObjectFromPadding(padding);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                axis = getMainAxisFromPlacement(placement);\n                length = getLengthFromAxis(axis);\n                _context2.next = 11;\n                return platform.getDimensions(element);\n\n              case 11:\n                arrowDimensions = _context2.sent;\n                minProp = axis === 'y' ? 'top' : 'left';\n                maxProp = axis === 'y' ? 'bottom' : 'right';\n                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                startDiff = coords[axis] - rects.reference[axis];\n                _context2.next = 18;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n\n              case 18:\n                arrowOffsetParent = _context2.sent;\n                clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n                if (clientSize === 0) {\n                  clientSize = rects.floating[length];\n                }\n\n                centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside the floating element's bounds.\n\n                min = paddingObject[minProp];\n                max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                offset = within(min, center, max); // If the reference is small enough that the arrow's padding causes it to\n                // to point to nothing for an aligned placement, adjust the offset of the\n                // floating element itself. This stops `shift()` from taking action, but can\n                // be worked around by calling it again after the `arrow()` if desired.\n\n                shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n                alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n                return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] - alignmentOffset), _defineProperty(_ref4, \"data\", (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset), _data)), _ref4));\n\n              case 29:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\n\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\nvar oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\n\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (side) {\n    return oppositeSideMap[side];\n  });\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nvar oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\n\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (alignment) {\n    return oppositeAlignmentMap[alignment];\n  });\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\n\n\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsSortedByLe, rects, middlewareData, placement, platform, elements, _options, alignment, _options$allowedPlace, allowedPlacements, _options$autoAlignmen, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByLeastOverflow, placementThatFitsOnAllSides, resetPlacement;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                rects = middlewareArguments.rects, middlewareData = middlewareArguments.middlewareData, placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options = options, alignment = _options.alignment, _options$allowedPlace = _options.allowedPlacements, allowedPlacements = _options$allowedPlace === void 0 ? allPlacements : _options$allowedPlace, _options$autoAlignmen = _options.autoAlignment, autoAlignment = _options$autoAlignmen === void 0 ? true : _options$autoAlignmen, detectOverflowOptions = _objectWithoutProperties(_options, [\"alignment\", \"allowedPlacements\", \"autoAlignment\"]);\n                placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n                _context3.next = 5;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 5:\n                overflow = _context3.sent;\n                currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n                currentPlacement = placements[currentIndex];\n\n                if (!(currentPlacement == null)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {});\n\n              case 10:\n                _context3.t0 = getAlignmentSides;\n                _context3.t1 = currentPlacement;\n                _context3.t2 = rects;\n                _context3.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 15:\n                _context3.t3 = _context3.sent;\n                _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n                main = _getAlignmentSides.main;\n                cross = _getAlignmentSides.cross;\n\n                if (!(placement !== currentPlacement)) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  reset: {\n                    placement: placements[0]\n                  }\n                });\n\n              case 21:\n                currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n                allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                  placement: currentPlacement,\n                  overflows: currentOverflows\n                }]);\n                nextPlacement = placements[currentIndex + 1]; // There are more placements to check.\n\n                if (!nextPlacement) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 26:\n                placementsSortedByLeastOverflow = allOverflows.slice().sort(function (a, b) {\n                  return a.overflows[0] - b.overflows[0];\n                });\n                placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(function (_ref) {\n                  var overflows = _ref.overflows;\n                  return overflows.every(function (overflow) {\n                    return overflow <= 0;\n                  });\n                })) == null ? void 0 : _placementsSortedByLe.placement;\n                resetPlacement = placementThatFitsOnAllSides || placementsSortedByLeastOverflow[0].placement;\n\n                if (!(resetPlacement !== placement)) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 31:\n                return _context3.abrupt(\"return\", {});\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  var lr = ['left', 'right'];\n  var rl = ['right', 'left'];\n  var tb = ['top', 'bottom'];\n  var bt = ['bottom', 'top'];\n\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n\n    default:\n      return [];\n  }\n}\n\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  var alignment = getAlignment(placement);\n  var list = getSideList(getSide(placement), direction === 'start', rtl);\n\n  if (alignment) {\n    list = list.map(function (side) {\n      return side + \"-\" + alignment;\n    });\n\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n\n  return list;\n}\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\n\n\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _options2, _options2$mainAxis, checkMainAxis, _options2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _options2$fallbackStr, fallbackStrategy, _options2$fallbackAxi, fallbackAxisSideDirection, _options2$flipAlignme, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip2, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                placement = middlewareArguments.placement, middlewareData = middlewareArguments.middlewareData, rects = middlewareArguments.rects, initialPlacement = middlewareArguments.initialPlacement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options2 = options, _options2$mainAxis = _options2.mainAxis, checkMainAxis = _options2$mainAxis === void 0 ? true : _options2$mainAxis, _options2$crossAxis = _options2.crossAxis, checkCrossAxis = _options2$crossAxis === void 0 ? true : _options2$crossAxis, specifiedFallbackPlacements = _options2.fallbackPlacements, _options2$fallbackStr = _options2.fallbackStrategy, fallbackStrategy = _options2$fallbackStr === void 0 ? 'bestFit' : _options2$fallbackStr, _options2$fallbackAxi = _options2.fallbackAxisSideDirection, fallbackAxisSideDirection = _options2$fallbackAxi === void 0 ? 'none' : _options2$fallbackAxi, _options2$flipAlignme = _options2.flipAlignment, flipAlignment = _options2$flipAlignme === void 0 ? true : _options2$flipAlignme, detectOverflowOptions = _objectWithoutProperties(_options2, [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"]);\n                side = getSide(placement);\n                isBasePlacement = getSide(initialPlacement) === initialPlacement;\n                _context4.next = 6;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 6:\n                rtl = _context4.sent;\n                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n\n                if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n                  fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n                }\n\n                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n                _context4.next = 12;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 12:\n                overflow = _context4.sent;\n                overflows = [];\n                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n                if (checkMainAxis) {\n                  overflows.push(overflow[side]);\n                }\n\n                if (checkCrossAxis) {\n                  _getAlignmentSides2 = getAlignmentSides(placement, rects, rtl), main = _getAlignmentSides2.main, cross = _getAlignmentSides2.cross;\n                  overflows.push(overflow[main], overflow[cross]);\n                }\n\n                overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                  placement: placement,\n                  overflows: overflows\n                }]); // One or more sides is overflowing.\n\n                if (overflows.every(function (side) {\n                  return side <= 0;\n                })) {\n                  _context4.next = 34;\n                  break;\n                }\n\n                nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n                nextPlacement = placements[nextIndex];\n\n                if (!nextPlacement) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    index: nextIndex,\n                    overflows: overflowsData\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 23:\n                resetPlacement = 'bottom';\n                _context4.t0 = fallbackStrategy;\n                _context4.next = _context4.t0 === 'bestFit' ? 27 : _context4.t0 === 'initialPlacement' ? 30 : 32;\n                break;\n\n              case 27:\n                _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                  return [d, d.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0)];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                })[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n                if (_placement) {\n                  resetPlacement = _placement;\n                }\n\n                return _context4.abrupt(\"break\", 32);\n\n              case 30:\n                resetPlacement = initialPlacement;\n                return _context4.abrupt(\"break\", 32);\n\n              case 32:\n                if (!(placement !== resetPlacement)) {\n                  _context4.next = 34;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 34:\n                return _context4.abrupt(\"return\", {});\n\n              case 35:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\n\n\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _options3, _options3$strategy, strategy, detectOverflowOptions, rects, overflow, offsets, _overflow, _offsets;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _options3 = options, _options3$strategy = _options3.strategy, strategy = _options3$strategy === void 0 ? 'referenceHidden' : _options3$strategy, detectOverflowOptions = _objectWithoutProperties(_options3, [\"strategy\"]);\n                rects = middlewareArguments.rects;\n                _context5.t0 = strategy;\n                _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n                break;\n\n              case 5:\n                _context5.next = 7;\n                return detectOverflow(middlewareArguments, _objectSpread({}, detectOverflowOptions, {\n                  elementContext: 'reference'\n                }));\n\n              case 7:\n                overflow = _context5.sent;\n                offsets = getSideOffsets(overflow, rects.reference);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    referenceHiddenOffsets: offsets,\n                    referenceHidden: isAnySideFullyClipped(offsets)\n                  }\n                });\n\n              case 10:\n                _context5.next = 12;\n                return detectOverflow(middlewareArguments, _objectSpread({}, detectOverflowOptions, {\n                  altBoundary: true\n                }));\n\n              case 12:\n                _overflow = _context5.sent;\n                _offsets = getSideOffsets(_overflow, rects.floating);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    escapedOffsets: _offsets,\n                    escaped: isAnySideFullyClipped(_offsets)\n                  }\n                });\n\n              case 15:\n                return _context5.abrupt(\"return\", {});\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\n\n\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _options4, _options4$padding, padding, x, y, fallback, clientRects, paddingObject, getBoundingClientRect, resetRects;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                getBoundingClientRect = function _getBoundingClientRec() {\n                  // There are two rects and they are disjoined.\n                  if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                    // Find the first rect in which the point is fully inside.\n                    return clientRects.find(function (rect) {\n                      return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                    }) || fallback;\n                  } // There are 2 or more connected rects.\n\n\n                  if (clientRects.length >= 2) {\n                    if (getMainAxisFromPlacement(placement) === 'x') {\n                      var firstRect = clientRects[0];\n                      var lastRect = clientRects[clientRects.length - 1];\n                      var isTop = getSide(placement) === 'top';\n                      var _top = firstRect.top;\n                      var _bottom = lastRect.bottom;\n\n                      var _left = isTop ? firstRect.left : lastRect.left;\n\n                      var _right = isTop ? firstRect.right : lastRect.right;\n\n                      var _width = _right - _left;\n\n                      var _height = _bottom - _top;\n\n                      return {\n                        top: _top,\n                        bottom: _bottom,\n                        left: _left,\n                        right: _right,\n                        width: _width,\n                        height: _height,\n                        x: _left,\n                        y: _top\n                      };\n                    }\n\n                    var isLeftSide = getSide(placement) === 'left';\n                    var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.right;\n                    })));\n                    var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.left;\n                    })));\n                    var measureRects = clientRects.filter(function (rect) {\n                      return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                    });\n                    var top = measureRects[0].top;\n                    var bottom = measureRects[measureRects.length - 1].bottom;\n                    var left = minLeft;\n                    var right = maxRight;\n                    var width = right - left;\n                    var height = bottom - top;\n                    return {\n                      top: top,\n                      bottom: bottom,\n                      left: left,\n                      right: right,\n                      width: width,\n                      height: height,\n                      x: left,\n                      y: top\n                    };\n                  }\n\n                  return fallback;\n                };\n\n                placement = middlewareArguments.placement, elements = middlewareArguments.elements, rects = middlewareArguments.rects, platform = middlewareArguments.platform, strategy = middlewareArguments.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n                // ClientRect's bounds, despite the event listener being triggered. A\n                // padding of 2 seems to handle this issue.\n\n                _options4 = options, _options4$padding = _options4.padding, padding = _options4$padding === void 0 ? 2 : _options4$padding, x = _options4.x, y = _options4.y;\n                _context6.t0 = rectToClientRect;\n\n                if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n                  _context6.next = 17;\n                  break;\n                }\n\n                _context6.t2 = platform;\n                _context6.t3 = rects.reference;\n                _context6.next = 9;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n\n              case 9:\n                _context6.t4 = _context6.sent;\n                _context6.t5 = strategy;\n                _context6.t6 = {\n                  rect: _context6.t3,\n                  offsetParent: _context6.t4,\n                  strategy: _context6.t5\n                };\n                _context6.next = 14;\n                return _context6.t2.convertOffsetParentRelativeRectToViewportRelativeRect.call(_context6.t2, _context6.t6);\n\n              case 14:\n                _context6.t1 = _context6.sent;\n                _context6.next = 18;\n                break;\n\n              case 17:\n                _context6.t1 = rects.reference;\n\n              case 18:\n                _context6.t7 = _context6.t1;\n                fallback = (0, _context6.t0)(_context6.t7);\n                _context6.next = 22;\n                return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n\n              case 22:\n                _context6.t8 = _context6.sent;\n\n                if (_context6.t8) {\n                  _context6.next = 25;\n                  break;\n                }\n\n                _context6.t8 = [];\n\n              case 25:\n                clientRects = _context6.t8;\n                paddingObject = getSideObjectFromPadding(padding);\n                _context6.next = 29;\n                return platform.getElementRects({\n                  reference: {\n                    getBoundingClientRect: getBoundingClientRect\n                  },\n                  floating: elements.floating,\n                  strategy: strategy\n                });\n\n              case 29:\n                resetRects = _context6.sent;\n\n                if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                  _context6.next = 32;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {\n                  reset: {\n                    rects: resetRects\n                  }\n                });\n\n              case 32:\n                return _context6.abrupt(\"return\", {});\n\n              case 33:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\n\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\n\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(middlewareArguments, value) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n            _context11.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n          case 3:\n            rtl = _context11.sent;\n            side = getSide(placement);\n            alignment = getAlignment(placement);\n            isVertical = getMainAxisFromPlacement(placement) === 'x';\n            mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n            crossAxisMulti = rtl && isVertical ? -1 : 1;\n            rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n            _ref6 = typeof rawValue === 'number' ? {\n              mainAxis: rawValue,\n              crossAxis: 0,\n              alignmentAxis: null\n            } : _objectSpread({\n              mainAxis: 0,\n              crossAxis: 0,\n              alignmentAxis: null\n            }, rawValue), mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n\n            if (alignment && typeof alignmentAxis === 'number') {\n              crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n            }\n\n            return _context11.abrupt(\"return\", isVertical ? {\n              x: crossAxis * crossAxisMulti,\n              y: mainAxis * mainAxisMulti\n            } : {\n              x: mainAxis * mainAxisMulti,\n              y: crossAxis * crossAxisMulti\n            });\n\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\n\nvar offset = function offset(value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y;\n                _context7.next = 3;\n                return convertValueToCoords(middlewareArguments, value);\n\n              case 3:\n                diffCoords = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  x: x + diffCoords.x,\n                  y: y + diffCoords.y,\n                  data: diffCoords\n                });\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\n\n\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _objectSpread3;\n\n        var x, y, placement, _options5, _options5$mainAxis, checkMainAxis, _options5$crossAxis, checkCrossAxis, _options5$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement;\n                _options5 = options, _options5$mainAxis = _options5.mainAxis, checkMainAxis = _options5$mainAxis === void 0 ? true : _options5$mainAxis, _options5$crossAxis = _options5.crossAxis, checkCrossAxis = _options5$crossAxis === void 0 ? false : _options5$crossAxis, _options5$limiter = _options5.limiter, limiter = _options5$limiter === void 0 ? {\n                  fn: function fn(_ref) {\n                    var x = _ref.x,\n                        y = _ref.y;\n                    return {\n                      x: x,\n                      y: y\n                    };\n                  }\n                } : _options5$limiter, detectOverflowOptions = _objectWithoutProperties(_options5, [\"mainAxis\", \"crossAxis\", \"limiter\"]);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                _context8.next = 5;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 5:\n                overflow = _context8.sent;\n                mainAxis = getMainAxisFromPlacement(getSide(placement));\n                crossAxis = getCrossAxis(mainAxis);\n                mainAxisCoord = coords[mainAxis];\n                crossAxisCoord = coords[crossAxis];\n\n                if (checkMainAxis) {\n                  minSide = mainAxis === 'y' ? 'top' : 'left';\n                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                  _min = mainAxisCoord + overflow[minSide];\n                  _max = mainAxisCoord - overflow[maxSide];\n                  mainAxisCoord = within(_min, mainAxisCoord, _max);\n                }\n\n                if (checkCrossAxis) {\n                  _minSide = crossAxis === 'y' ? 'top' : 'left';\n                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                  _min2 = crossAxisCoord + overflow[_minSide];\n                  _max2 = crossAxisCoord - overflow[_maxSide];\n                  crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n                }\n\n                limitedCoords = limiter.fn(_objectSpread({}, middlewareArguments, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n                return _context8.abrupt(\"return\", _objectSpread({}, limitedCoords, {\n                  data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                  }\n                }));\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\n\n\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options: options,\n    fn: function fn(middlewareArguments) {\n      var _ref5;\n\n      var x = middlewareArguments.x,\n          y = middlewareArguments.y,\n          placement = middlewareArguments.placement,\n          rects = middlewareArguments.rects,\n          middlewareData = middlewareArguments.middlewareData;\n      var _options6 = options,\n          _options6$offset = _options6.offset,\n          offset = _options6$offset === void 0 ? 0 : _options6$offset,\n          _options6$mainAxis = _options6.mainAxis,\n          checkMainAxis = _options6$mainAxis === void 0 ? true : _options6$mainAxis,\n          _options6$crossAxis = _options6.crossAxis,\n          checkCrossAxis = _options6$crossAxis === void 0 ? true : _options6$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\n\n\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var placement, rects, platform, elements, _options7, _options7$apply, apply, detectOverflowOptions, overflow, side, alignment, heightSide, widthSide, xMin, xMax, yMin, yMax, dimensions, nextDimensions;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options7 = options, _options7$apply = _options7.apply, apply = _options7$apply === void 0 ? function () {} : _options7$apply, detectOverflowOptions = _objectWithoutProperties(_options7, [\"apply\"]);\n                _context9.next = 4;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 4:\n                overflow = _context9.sent;\n                side = getSide(placement);\n                alignment = getAlignment(placement);\n\n                if (!(side === 'top' || side === 'bottom')) {\n                  _context9.next = 26;\n                  break;\n                }\n\n                heightSide = side;\n                _context9.t0 = alignment;\n                _context9.next = 12;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 12:\n                if (!_context9.sent) {\n                  _context9.next = 16;\n                  break;\n                }\n\n                _context9.t1 = 'start';\n                _context9.next = 17;\n                break;\n\n              case 16:\n                _context9.t1 = 'end';\n\n              case 17:\n                _context9.t2 = _context9.t1;\n\n                if (!(_context9.t0 === _context9.t2)) {\n                  _context9.next = 22;\n                  break;\n                }\n\n                _context9.t3 = 'left';\n                _context9.next = 23;\n                break;\n\n              case 22:\n                _context9.t3 = 'right';\n\n              case 23:\n                widthSide = _context9.t3;\n                _context9.next = 28;\n                break;\n\n              case 26:\n                widthSide = side;\n                heightSide = alignment === 'end' ? 'top' : 'bottom';\n\n              case 28:\n                xMin = max(overflow.left, 0);\n                xMax = max(overflow.right, 0);\n                yMin = max(overflow.top, 0);\n                yMax = max(overflow.bottom, 0);\n                dimensions = {\n                  availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n                  availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n                };\n                _context9.next = 35;\n                return apply(_objectSpread({}, middlewareArguments, {}, dimensions));\n\n              case 35:\n                _context9.next = 37;\n                return platform.getDimensions(elements.floating);\n\n              case 37:\n                nextDimensions = _context9.sent;\n\n                if (!(rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height)) {\n                  _context9.next = 40;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  reset: {\n                    rects: true\n                  }\n                });\n\n              case 40:\n                return _context9.abrupt(\"return\", {});\n\n              case 41:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"sources":["C:/Users/SMASH-PC/Desktop/furniturebidding/frontend/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"],"names":["getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","process","env","NODE_ENV","console","error","join","name","Error","getElementRects","rects","statefulPlacement","middlewareData","resetCount","i","fn","initialPlacement","elements","nextX","nextY","data","reset","warn","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","getOffsetParent","offsetParent","getScale","offsetScale","convertOffsetParentRelativeRectToViewportRelativeRect","elementClientRect","min","Math","max","within","min$1","value","max$1","arrow","getDimensions","arrowDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","shouldAddOffset","alignmentOffset","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","detectOverflowOptions","placements","undefined","overflow","currentIndex","_middlewareData$autoP","index","currentPlacement","currentOverflows","allOverflows","_middlewareData$autoP2","overflows","nextPlacement","placementsSortedByLeastOverflow","slice","sort","a","b","placementThatFitsOnAllSides","_placementsSortedByLe","find","every","resetPlacement","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","flip","checkMainAxis","crossAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","push","overflowsData","_middlewareData$flip","nextIndex","_middlewareData$flip2","_overflowsData$map$so","d","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","inline","getBoundingClientRect","clientRects","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","getClientRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","availableHeight","availableWidth","nextDimensions"],"mappings":"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","sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  if (process.env.NODE_ENV !== \"production\") {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n    if (validMiddleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n    }\n    if (!reference || !floating) {\n      console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n    }\n  }\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  if (process.env.NODE_ENV !== \"production\") ;\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = options || {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n    if (element == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsSortedByLe;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides || placementsSortedByLeastOverflow[0].placement;\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n        let resetPlacement = 'bottom';\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n              if (placement) {\n                resetPlacement = placement;\n              }\n              break;\n            }\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = options;\n      const {\n        rects\n      } = middlewareArguments;\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || [];\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value;\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      await apply({\n        ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"]},"metadata":{},"sourceType":"module"}