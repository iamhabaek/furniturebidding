{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ADD_BIDDING,ADD_ORDER,ADD_PRODUCT,DELETE_PRODUCT,GET_BIDDINGS,GET_ORDERS,GET_PRODUCTS,GET_USERS,UPDATE_ORDER}from\"../actions/FurnitureActions\";export var initialState={products:[],biddings:[],users:[],orders:[]};var FurnitureReducer=function FurnitureReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_PRODUCTS:{return _objectSpread({},state,{products:action.payload});}case GET_BIDDINGS:{return _objectSpread({},state,{biddings:action.payload});}case GET_USERS:{return _objectSpread({},state,{users:action.payload});}case GET_ORDERS:{return _objectSpread({},state,{orders:action.payload});}case ADD_PRODUCT:{return _objectSpread({},state,{products:[].concat(_toConsumableArray(state.products),[action.payload])});}case DELETE_PRODUCT:{return _objectSpread({},state,{products:state.products.filter(function(product){return product.id!==action.payload;})});}case ADD_BIDDING:{return _objectSpread({},state,{biddings:[].concat(_toConsumableArray(state.biddings),[action.payload])});}case ADD_ORDER:{return _objectSpread({},state,{orders:[].concat(_toConsumableArray(state.orders),[action.payload])});}case UPDATE_ORDER:{return _objectSpread({},state,{orders:state.orders.map(function(order){return order.id===action.payload.id?_objectSpread({},order,{isPaid:action.payload.isPaid}):order;})});}}};export default FurnitureReducer;","map":{"version":3,"sources":["C:/Users/SMASH-PC/Desktop/furniturebidding/frontend/src/app/reducers/reducers/FurnitureReducer.js"],"names":["ADD_BIDDING","ADD_ORDER","ADD_PRODUCT","DELETE_PRODUCT","GET_BIDDINGS","GET_ORDERS","GET_PRODUCTS","GET_USERS","UPDATE_ORDER","initialState","products","biddings","users","orders","FurnitureReducer","state","action","type","payload","filter","product","id","map","order","isPaid"],"mappings":"+WAAA,OACEA,WADF,CAEEC,SAFF,CAGEC,WAHF,CAIEC,cAJF,CAKEC,YALF,CAMEC,UANF,CAOEC,YAPF,CAQEC,SARF,CASEC,YATF,KAUO,6BAVP,CAWA,MAAO,IAAMC,CAAAA,YAAY,CAAG,CAC1BC,QAAQ,CAAE,EADgB,CAE1BC,QAAQ,CAAE,EAFgB,CAG1BC,KAAK,CAAE,EAHmB,CAI1BC,MAAM,CAAE,EAJkB,CAArB,CAOP,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBN,YAAyB,IAAXO,CAAAA,MAAW,2CACzD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKX,CAAAA,YAAL,CAAmB,CACjB,wBACKS,KADL,EAEEL,QAAQ,CAAEM,MAAM,CAACE,OAFnB,GAID,CACD,IAAKd,CAAAA,YAAL,CAAmB,CACjB,wBACKW,KADL,EAEEJ,QAAQ,CAAEK,MAAM,CAACE,OAFnB,GAID,CACD,IAAKX,CAAAA,SAAL,CAAgB,CACd,wBACKQ,KADL,EAEEH,KAAK,CAAEI,MAAM,CAACE,OAFhB,GAID,CACD,IAAKb,CAAAA,UAAL,CAAiB,CACf,wBACKU,KADL,EAEEF,MAAM,CAAEG,MAAM,CAACE,OAFjB,GAID,CACD,IAAKhB,CAAAA,WAAL,CAAkB,CAChB,wBACKa,KADL,EAEEL,QAAQ,8BAAMK,KAAK,CAACL,QAAZ,GAAsBM,MAAM,CAACE,OAA7B,EAFV,GAID,CACD,IAAKf,CAAAA,cAAL,CAAqB,CACnB,wBACKY,KADL,EAEEL,QAAQ,CAAEK,KAAK,CAACL,QAAN,CAAeS,MAAf,CACR,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,EAAR,GAAeL,MAAM,CAACE,OAAnC,EADQ,CAFZ,GAMD,CACD,IAAKlB,CAAAA,WAAL,CAAkB,CAChB,wBACKe,KADL,EAEEJ,QAAQ,8BAAMI,KAAK,CAACJ,QAAZ,GAAsBK,MAAM,CAACE,OAA7B,EAFV,GAID,CACD,IAAKjB,CAAAA,SAAL,CAAgB,CACd,wBACKc,KADL,EAEEF,MAAM,8BAAME,KAAK,CAACF,MAAZ,GAAoBG,MAAM,CAACE,OAA3B,EAFR,GAID,CACD,IAAKV,CAAAA,YAAL,CAAmB,CACjB,wBACKO,KADL,EAEEF,MAAM,CAAEE,KAAK,CAACF,MAAN,CAAaS,GAAb,CAAiB,SAACC,KAAD,QACvBA,CAAAA,KAAK,CAACF,EAAN,GAAaL,MAAM,CAACE,OAAP,CAAeG,EAA5B,kBACSE,KADT,EACgBC,MAAM,CAAER,MAAM,CAACE,OAAP,CAAeM,MADvC,GAEID,KAHmB,EAAjB,CAFV,GAQD,CA5DH,CA8DD,CA/DD,CAiEA,cAAeT,CAAAA,gBAAf","sourcesContent":["import {\r\n  ADD_BIDDING,\r\n  ADD_ORDER,\r\n  ADD_PRODUCT,\r\n  DELETE_PRODUCT,\r\n  GET_BIDDINGS,\r\n  GET_ORDERS,\r\n  GET_PRODUCTS,\r\n  GET_USERS,\r\n  UPDATE_ORDER,\r\n} from \"../actions/FurnitureActions\";\r\nexport const initialState = {\r\n  products: [],\r\n  biddings: [],\r\n  users: [],\r\n  orders: [],\r\n};\r\n\r\nconst FurnitureReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n    }\r\n    case GET_BIDDINGS: {\r\n      return {\r\n        ...state,\r\n        biddings: action.payload,\r\n      };\r\n    }\r\n    case GET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    }\r\n    case GET_ORDERS: {\r\n      return {\r\n        ...state,\r\n        orders: action.payload,\r\n      };\r\n    }\r\n    case ADD_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        products: [...state.products, action.payload],\r\n      };\r\n    }\r\n    case DELETE_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(\r\n          (product) => product.id !== action.payload\r\n        ),\r\n      };\r\n    }\r\n    case ADD_BIDDING: {\r\n      return {\r\n        ...state,\r\n        biddings: [...state.biddings, action.payload],\r\n      };\r\n    }\r\n    case ADD_ORDER: {\r\n      return {\r\n        ...state,\r\n        orders: [...state.orders, action.payload],\r\n      };\r\n    }\r\n    case UPDATE_ORDER: {\r\n      return {\r\n        ...state,\r\n        orders: state.orders.map((order) =>\r\n          order.id === action.payload.id\r\n            ? { ...order, isPaid: action.payload.isPaid }\r\n            : order\r\n        ),\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default FurnitureReducer;\r\n"]},"metadata":{},"sourceType":"module"}