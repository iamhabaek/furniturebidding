{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nvar uaString;\n\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n\n  var uaData = navigator.userAgentData;\n\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n    return uaString;\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\n\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\n\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nfunction isOverflowElement(element) {\n  var _getComputedStyle$ = getComputedStyle$1(element),\n      overflow = _getComputedStyle$.overflow,\n      overflowX = _getComputedStyle$.overflowX,\n      overflowY = _getComputedStyle$.overflowY,\n      display = _getComputedStyle$.display;\n\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\n\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  var isFirefox = /firefox/i.test(getUAString());\n  var css = getComputedStyle$1(element);\n  var backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(function (value) {\n    return css.willChange.includes(value);\n  }) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  function (value) {\n    var contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nvar min = Math.min;\nvar max = Math.max;\nvar round = Math.round;\n\nfunction getCssDimensions(element) {\n  var css = getComputedStyle$1(element);\n  var width = parseFloat(css.width);\n  var height = parseFloat(css.height);\n  var offsetWidth = element.offsetWidth;\n  var offsetHeight = element.offsetHeight;\n  var shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n\n  return {\n    width: width,\n    height: height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nvar FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\n\nfunction getScale(element) {\n  var domElement = unwrapElement(element);\n\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n\n  var rect = domElement.getBoundingClientRect();\n\n  var _getCssDimensions = getCssDimensions(domElement),\n      width = _getCssDimensions.width,\n      height = _getCssDimensions.height,\n      fallback = _getCssDimensions.fallback;\n\n  var x = (fallback ? round(rect.width) : rect.width) / width;\n  var y = (fallback ? round(rect.height) : rect.height) / height; // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var domElement = unwrapElement(element);\n  var scale = FALLBACK_SCALE;\n\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n\n  var win = domElement ? getWindow(domElement) : window;\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  var y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  var width = clientRect.width / scale.x;\n  var height = clientRect.height / scale.y;\n\n  if (domElement) {\n    var _win = getWindow(domElement);\n\n    var offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    var currentIFrame = _win.frameElement;\n\n    while (currentIFrame && offsetParent && offsetWin !== _win) {\n      var iframeScale = getScale(currentIFrame);\n      var iframeRect = currentIFrame.getBoundingClientRect();\n      var css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      var offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  var result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  var rect = _ref.rect,\n      offsetParent = _ref.offsetParent,\n      strategy = _ref.strategy;\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var scale = {\n    x: 1,\n    y: 1\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      var offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n} // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var scroll = getNodeScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  var parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollableAncestor = getNearestOverflowAncestor(node);\n  var isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  var win = getWindow(scrollableAncestor);\n\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n} // Returns the inner client rect, subtracting scrollbars if present\n\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  var top = clientRect.top + element.clientTop;\n  var left = clientRect.left + element.clientLeft;\n  var scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  var width = element.clientWidth * scale.x;\n  var height = element.clientHeight * scale.y;\n  var x = left * scale.x;\n  var y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\n\n\nfunction getClippingElementAncestors(element, cache) {\n  var cachedResult = cache.get(element);\n\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  var result = getOverflowAncestors(element).filter(function (el) {\n    return isElement(el) && getNodeName(el) !== 'body';\n  });\n  var currentContainingBlockComputedStyle = null;\n  var elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  var currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    var computedStyle = getComputedStyle$1(currentNode);\n    var containingBlock = isContainingBlock(currentNode);\n    var shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(function (ancestor) {\n        return ancestor !== currentNode;\n      });\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  cache.set(element, result);\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  var element = _ref.element,\n      boundary = _ref.boundary,\n      rootBoundary = _ref.rootBoundary,\n      strategy = _ref.strategy;\n  var elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  var clippingAncestors = [].concat(_toConsumableArray(elementClippingAncestors), [rootBoundary]);\n  var firstClippingAncestor = clippingAncestors[0];\n  var clippingRect = clippingAncestors.reduce(function (accRect, clippingAncestor) {\n    var rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nvar platform = {\n  getClippingRect: getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect: convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement: isElement,\n  getDimensions: getDimensions,\n  getOffsetParent: getOffsetParent,\n  getDocumentElement: getDocumentElement,\n  getScale: getScale,\n  getElementRects: function getElementRects(_ref) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var reference, floating, strategy, getOffsetParentFn, getDimensionsFn;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              reference = _ref.reference, floating = _ref.floating, strategy = _ref.strategy;\n              getOffsetParentFn = _this.getOffsetParent || getOffsetParent;\n              getDimensionsFn = _this.getDimensions;\n              _context.t0 = getRectRelativeToOffsetParent;\n              _context.t1 = reference;\n              _context.next = 7;\n              return getOffsetParentFn(floating);\n\n            case 7:\n              _context.t2 = _context.sent;\n              _context.t3 = strategy;\n              _context.t4 = (0, _context.t0)(_context.t1, _context.t2, _context.t3);\n              _context.t5 = _objectSpread;\n              _context.t6 = {\n                x: 0,\n                y: 0\n              };\n              _context.next = 14;\n              return getDimensionsFn(floating);\n\n            case 14:\n              _context.t7 = _context.sent;\n              _context.t8 = (0, _context.t5)(_context.t6, _context.t7);\n              return _context.abrupt(\"return\", {\n                reference: _context.t4,\n                floating: _context.t8\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  getClientRects: function getClientRects(element) {\n    return Array.from(element.getClientRects());\n  },\n  isRTL: function isRTL(element) {\n    return getComputedStyle$1(element).direction === 'rtl';\n  }\n};\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\n\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$ancestorScro = _options.ancestorScroll,\n      _ancestorScroll = _options$ancestorScro === void 0 ? true : _options$ancestorScro,\n      _options$ancestorResi = _options.ancestorResize,\n      ancestorResize = _options$ancestorResi === void 0 ? true : _options$ancestorResi,\n      _options$elementResiz = _options.elementResize,\n      elementResize = _options$elementResiz === void 0 ? true : _options$elementResiz,\n      _options$animationFra = _options.animationFrame,\n      animationFrame = _options$animationFra === void 0 ? false : _options$animationFra;\n\n  var ancestorScroll = _ancestorScroll && !animationFrame;\n  var ancestors = ancestorScroll || ancestorResize ? [].concat(_toConsumableArray(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), _toConsumableArray(getOverflowAncestors(floating))) : [];\n  ancestors.forEach(function (ancestor) {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  var observer = null;\n\n  if (elementResize) {\n    var initialUpdate = true;\n    observer = new ResizeObserver(function () {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  var frameId;\n  var prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    var nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return function () {\n    var _observer;\n\n    ancestors.forEach(function (ancestor) {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\n\nvar computePosition = function computePosition(reference, floating, options) {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  var cache = new Map();\n\n  var mergedOptions = _objectSpread({\n    platform: platform\n  }, options);\n\n  var platformWithCache = _objectSpread({}, mergedOptions.platform, {\n    _c: cache\n  });\n\n  return computePosition$1(reference, floating, _objectSpread({}, mergedOptions, {\n    platform: platformWithCache\n  }));\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"sources":["C:/Users/SMASH-PC/Desktop/furniturebidding/frontend/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js"],"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","element","getComputedStyle","getNodeName","isNode","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","value","HTMLElement","isElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isLayoutViewport","isLastTraversableNode","min","Math","max","round","getCssDimensions","width","parseFloat","height","offsetWidth","offsetHeight","shouldFallback","fallback","unwrapElement","contextElement","FALLBACK_SCALE","x","y","getScale","domElement","rect","getBoundingClientRect","Number","isFinite","includeScale","isFixedStrategy","offsetParent","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","right","bottom","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","getRectRelativeToOffsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"mappings":"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","sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(\n  // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n  // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot ||\n  // DOM Element detected\n  node.parentNode || (\n  // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) ||\n  // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n    // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\n// Returns the inner client rect, subtracting scrollbars if present\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"]},"metadata":{},"sourceType":"module"}