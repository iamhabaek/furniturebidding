{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMASH-PC\\\\Desktop\\\\furniturebidding\\\\frontend\\\\src\\\\app\\\\views\\\\account\\\\components\\\\Payment.js\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PaymentForm from \"./PaymentForm\";\n\nconst Payment = ({\n  stripePromise,\n  clientSecret\n}) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"text-capitalize\",\n    onClick: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Pay Now\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Payment\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, clientSecret && stripePromise && /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    options: {\n      clientSecret\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PaymentForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default Payment;","map":{"version":3,"sources":["C:/Users/SMASH-PC/Desktop/furniturebidding/frontend/src/app/views/account/components/Payment.js"],"names":["React","useEffect","useState","Fragment","Modal","Button","Elements","PaymentForm","Payment","stripePromise","clientSecret","show","setShow","handleClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AAEA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAqC;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAGA,sBACE,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,IAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,MAAM,EAAEE,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,YAAY,IAAID,aAAhB,iBACC,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEA,aAAlB;AAAiC,IAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CAJF,CAJF,CADF,CADF;AAqBD,CA3BD;;AA6BA,eAAeF,OAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\nimport PaymentForm from \"./PaymentForm\";\r\nconst Payment = ({ stripePromise, clientSecret }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Fragment>\r\n        <Button className=\"text-capitalize\" onClick={() => setShow(true)}>\r\n          Pay Now\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Payment</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {clientSecret && stripePromise && (\r\n              <Elements stripe={stripePromise} options={{ clientSecret }}>\r\n                <PaymentForm />\r\n              </Elements>\r\n            )}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"]},"metadata":{},"sourceType":"module"}